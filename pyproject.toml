[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "earth2mip"
authors = [
    { name="NVIDIA Research" },
    { name="NVIDIA Modulus Team" },
]
description = "Earth-2 Model Intercomparison Project (MIP) is a python framework that enables climate researchers and scientists to explore and experiment with AI models for weather and climate."
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache 2.0"}
dependencies = [
    "altair>=4.2.2",
    "cdsapi >= 0.6.1",
    "cfgrib >= 0.9.10.3",
    "cftime",
    "dask>=2023.1.0",
    "distributed>=2023.1.0",
    "eccodes>=1.4.0",
    "ecmwflibs>=0.5.2",
    "einops",
    "fsspec",
    "h5py>=3.2.0",
    "h5netcdf>=1.0.0",
    "importlib_metadata>=6.7.0",
    "joblib>=1.1.0",
    "netCDF4>=1.6.4",
    "numpy",
    "nvidia-modulus >= 0.3.0",
    "pandas>=1.5.3",
    "properscoring>=0.1",
    "pydantic >= 1.10, <=1.10.11",
    "pytest-asyncio >= 0.21.0",
    "pytest-regtest",
    "pytest>=7.0.0",
    "s3fs",
    "setuptools >= 38.4",  # For pkg_resources
    "torch>=1.13",
    "torch_harmonics>=0.5.0",
    "tqdm>=4.65.0",
    "typer",
    "xarray",
    "xskillscore >= 0.0.24",
    "zarr>=2.14.2",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dynamic = ["version"]

[project.optional-dependencies]
pangu = [
    "onnxruntime-gpu>=1.15.1",
]
graphcast = [
    "jax>=0.4.16",
    "graphcast @ https://github.com/deepmind/graphcast/archive/e622a15c1b9742d78f9b662f2af262604d58c204.tar.gz",
    "gcsfs>=2023.6.0",
]
dev = [
    "pre-commit>=3.0.0",
    "pyyaml>=6.0",
    "black==22.10.0",
    "interrogate==1.5.0",
    "coverage>=7.2.0",
    "ruff==0.1.5",
]

[project.entry-points."earth2mip.networks"]
    fcn = "earth2mip.networks.fcn:load"
    dlwp = "earth2mip.networks.dlwp:load"
    pangu = "earth2mip.networks.pangu:load"
    pangu_6 = "earth2mip.networks.pangu:load_6"
    pangu_24 = "earth2mip.networks.pangu:load_24"
    fcnv2_sm = "earth2mip.networks.fcnv2_sm:load"
    graphcast = "earth2mip.networks.graphcast:load_time_loop"
    graphcast_operational = "earth2mip.networks.graphcast:load_time_loop_operational"
    graphcast_small = "earth2mip.networks.graphcast:load_time_loop_small"


[tool.setuptools.dynamic]
version = {attr = "earth2mip.__version__"}

[tool.setuptools.packages.find]
include = ["earth2mip", "earth2mip.*"]

[tool.ruff]
# Enable flake8/pycodestyle (`E`), Pyflakes (`F`), flake8-bandit (`S`),
# isort (`I`), and performance 'PERF' rules.
select = ["E", "F", "S", "I", "PERF"]
fixable = ["I"]

# Never enforce `E402`, `E501` (line length violations),
# and `S311` (random number generators)
# `S310` (URL audit, TODO fix this)
ignore = ["E501", "S311", "S310"]

[tool.ruff.per-file-ignores]
# Ignore `F401` (import violations) in all `__init__.py` files, and in `docs/*.py`.
"__init__.py" = ["F401"]
"docs/*.py" = ["F401"]

# Ignore `S101` (assertions) in all `test` files.
"test/*.py" = ["S101"]

# Ignore `E402` (imports at top of file) for example scripts
"examples/**/*.py" = ["E402"]

# For network arch code
# Ignore `E741` (ambigious variable names)
# Ignore `PERF401` (use list compression)
"earth2mip/networks/fcnv2/*.py" = ["E741", "PERF401"]

[tool.pytest.ini_options]
testpaths = ["test"]
norecursedirs = [".git", "third_party"]
addopts = ["-vv", "-r", "xfXs"]
markers = [
    "slow: marks tests as slow (deselect with: -m 'not slow')",
    "cli: marks tests which run CLIs"
]
asyncio_mode = "auto"

# Coverage.py configuration (ran using pytest-cov)
[tool.coverage.run]
branch = true
concurrency = ["multiprocessing", "thread"]
source = ["earth2mip"]
omit = [
    "third_party/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
]
exclude_also = [
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
omit = [
    # omit anything in a .local directory anywhere
    "test/*",
    # omit fcn arch
    "earth2mip/networks/fcnv2/*",
]
show_missing = true
fail_under = 20

[tool.coverage.xml]
output = "e2mip.coverage.xml"