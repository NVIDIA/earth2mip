base_config: &BASE_CONFIG

    nettype: 'sfno'
    scale_factor: 4
    num_blocks: 8
    embed_dim: 256
    num_layers: 12
    complex_activation: 'real'
    normalization_layer: 'instance_norm'
    hard_thresholding_fraction: 1.0 # turning it off for now
    verbose: !!bool False
    # skip_fno: 'identity' # 'linear', 'identity' or None
    # nested_skip_fno: !!bool True # whether to nest the inner skip connection or have it be sequential, inside the AFNO block

    # disable data parallel shared weights:
    #data_parallel_shared_weights: False

    loss: 'weighted geometric l2'
    lr: 5E-4


    max_epochs: 150
    batch_size: 64

    scheduler: 'CosineAnnealingLR' # 'ReduceLROnPlateau'
    scheduler_T_max: 150
    lr_warmup_steps: 0
    weight_decay: 0.0 # 0.1

    # wireup stuff
    wireup_info: 'mpi'
    wireup_store: 'tcp'

    train_data_path: '/train'
    valid_data_path: '/test'
    exp_dir: '/runs'

    num_data_workers: 4
    num_visualization_workers: 2
    dt: 1 # how many timesteps ahead the model will predict
    n_history: 0 #how many previous timesteps to consider
    prediction_type: 'iterative'
    prediction_length: 35 #applicable only if prediction_type == 'iterative'
    n_initial_conditions: 5 #applicable only if prediction_type == 'iterative'
    valid_autoreg_steps: 20 # number of autoregressive steps for validation

    ics_type: 'specify_number'
    save_raw_forecasts: !!bool True
    save_channel: !!bool False
    masked_acc: !!bool False
    maskpath: None
    perturb: !!bool False
    add_noise: !!bool False
    noise_std: 0.
    add_zenith: !!bool False

    N_grid_channels: 0
    gridtype: 'sinusoidal' #options 'sinusoidal' or 'linear'
    roll: !!bool False

    #options default, residual
    target: 'default'

    in_channels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
    out_channels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
#    channel_names: ['u10', 'v10', 't2m', 'sp', 'msl', 't850', 'u1000', 'v1000', 'z1000', 'u850', 'v850', 'z850', 'u500', 'v500', 'z500', 't500', 'z50', 'r500', 'r850', 'tcwv', 'u100m', 'v100m', 'u250', 'v250', 'z250', 't250', 'u100', 'v100', 'z100', 't100', 'u900', 'v900', 'z900', 't900']
    normalization: 'zscore' #options zscore or minmax or none

    min_path: '/stats/mins.npy'
    max_path: '/stats/maxs.npy'
    time_means_path:   '/stats/time_means.npy'
    global_means_path: '/stats/global_means.npy'
    global_stds_path:  '/stats/global_stds.npy'

    # invariants
    add_grid: !!bool False
    add_orography: !!bool False
    orography_path: /invariants/e5.oper.invariant.128_129_z.ll025sc.1979010100_1979010100.nc
    add_landmask: !!bool False
    landmask_path: /invariants/e5.oper.invariant.128_172_lsm.ll025sc.1979010100_1979010100.nc

    finetune: !!bool False

    log_to_screen: !!bool True
    log_to_wandb: !!bool True
    log_video: 0 # if > 0 will log every i-th epoch
    save_checkpoint: !!bool True

    enable_nhwc: !!bool False
    optimizer_type: 'FusedAdam'
    optimizer_beta1: 0.9
    optimizer_beta2: 0.95
    optimizer_max_grad_norm: 32
    crop_size_x: None
    crop_size_y: None

    two_step_training: !!bool False
    plot_animations: !!bool False

    ifs_acc_path: '/ifs/'
    inf_data_path: '/out_of_sample'


    # Weights and biases configuration
    wandb_name: None # If None, config will be used but you can override it here
    wandb_group: None # If None, will be 'era5_wind' + config, but you can override it here
    wandb_project: 'sfno'
    wandb_entity: 'nv-research-climate' # but your username here

###########################################################################################################################
# non-linear SFNO models
###########################################################################################################################

sfno_baseline: &SFNO_BASELINE
    <<: *BASE_CONFIG
    spectral_transform: 'sht'
    filter_type: 'non-linear'
    complex_activation: 'real'

    # for compatibility
    normalization_layer: 'instance_norm'
    lr: 6E-4

    mlp_mode: 'distributed'
    num_layers: 12
    scale_factor: 6
    embed_dim: 256

    spectral_layers: 3

sfno_baseline_26ch_postmerge_test:
    <<: *SFNO_BASELINE
    max_epochs: 2
    n_train_samples: 32
    n_eval_samples: 32

sfno_baseline_26ch_postmerge_test_finetune:
    <<: *SFNO_BASELINE
    max_epochs: 2
    n_train_samples: 32
    n_eval_samples: 32
    pretrained_checkpoint_path: '/runs/sfno_baseline_26ch_postmerge_test/00/training_checkpoints/best_ckpt_mp0.tar'
    finetune: !!bool True

sfno_baseline_26ch_postmerge_test_finetune_3step:
    <<: *SFNO_BASELINE
    max_epochs: 2
    n_train_samples: 32
    n_eval_samples: 32
    pretrained_checkpoint_path: '/runs/sfno_baseline_26ch_postmerge_test_finetune/00/training_checkpoints/best_ckpt_mp0.tar'
    finetune: !!bool True

# paper models
sfno_baseline_26ch: &SFNO_BASELINE_26CH
    <<: *SFNO_BASELINE

sfno_baseline_26ch_shallow:
    <<: *SFNO_BASELINE
    num_layers: 0
    embed_dim: 128

sfno_baseline_26ch_narrow:
    <<: *SFNO_BASELINE
    embed_dim: 128

sfno_baseline_26ch_2step: &SFNO_BASELINE_26CH_FINETUNING
    <<: *SFNO_BASELINE_26CH
    
    num_layers: 12
    scale_factor: 6
    embed_dim: 256
    pretrained_checkpoint_path: '/runs/hafno_baseline_26ch_sc6_layers12_edim256_bs32/ngpu32_mp1_sp1/training_checkpoints/best_ckpt_mp0.tar'

sfno_baseline_26ch_retrain:
    <<: *SFNO_BASELINE_26CH_FINETUNING

    pretrained_checkpoint_path: '/runs/sfno_baseline_26ch_2step/ngpu64_mp1_sp1/training_checkpoints/best_ckpt_mp0.tar'

sfno_baseline_26ch_rescaled_2step:
    <<: *SFNO_BASELINE_26CH_FINETUNING
    scale_factor: 4
    pretrained_checkpoint_path: '/runs/sfno_baseline_26ch/ngpu64_mp1_sp1/training_checkpoints/best_ckpt_mp0.tar'

sfno_baseline_26ch_zenith:
    <<: *SFNO_BASELINE
    add_zenith: !!bool True

sfno_baseline_26ch_sc4:
    <<: *SFNO_BASELINE
    scale_factor: 4

sfno_baseline_26ch_sc4_2step:
    <<: *SFNO_BASELINE_26CH_FINETUNING
    scale_factor: 4
    pretrained_checkpoint_path: '/runs/sfno_baseline_26ch_sc4/ngpu64_mp1_sp1/training_checkpoints/best_ckpt_mp0.tar'

sfno_baseline_26ch_sc4_retrain:
    <<: *SFNO_BASELINE_26CH_FINETUNING
    scale_factor: 4
    pretrained_checkpoint_path: '/runs/sfno_baseline_26ch_sc4_2step/ngpu64_mp1_sp1/training_checkpoints/best_ckpt_mp0.tar'

###########################################################################################################################
# linear SFNO models
###########################################################################################################################

sfno_baseline_linear: &SFNO_BASELINE_LINEAR
    <<: *BASE_CONFIG
    spectral_transform: 'sht'
    filter_type: 'linear'

    lr: 6E-4

    mlp_mode: 'serial'
    num_layers: 8
    scale_factor: 6
    embed_dim: 128

sfno_baseline_linear_26ch: &SFNO_BASELINE_LINEAR_26CH
    <<: *SFNO_BASELINE_LINEAR

#[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]

sfno_73ch: &SFNO_73CH 
    <<: *SFNO_BASELINE_26CH
    in_channels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]
    out_channels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]
    channel_names: ['u10m', 'v10m', 'u100m', 'v100m', 't2m', 'sp', 'msl', 'tcwv', 'u50', 'u100', 'u150', 'u200', 'u250', 'u300', 'u400', 'u500', 'u600', 'u700', 'u850', 'u925', 'u1000', 'v50', 'v100', 'v150', 'v200', 'v250', 'v300', 'v400', 'v500', 'v600', 'v700', 'v850', 'v925', 'v1000', 'z50', 'z100', 'z150', 'z200', 'z250', 'z300', 'z400', 'z500', 'z600', 'z700', 'z850', 'z925', 'z1000', 't50', 't100', 't150', 't200', 't250', 't300', 't400', 't500', 't600', 't700', 't850', 't925', 't1000', 'r50', 'r100', 'r150', 'r200', 'r250', 'r300', 'r400', 'r500', 'r600', 'r700', 'r850', 'r925', 'r1000']
    max_epochs: 60
    scheduler_T_max: 60
    n_eval_samples: 256

sfno_73ch_2step:
    <<: *SFNO_73CH
    pretrained_checkpoint_path: '/runs/sfno_73ch/ngpu64_mp1_sp1/training_checkpoints/ckpt_mp0.tar'
    max_epochs: 20
    scheduler_T_max: 20
    lr: 1E-4
    finetune: !!bool True

sfno_73ch_3step:
    <<: *SFNO_73CH
    pretrained_checkpoint_path: '/runs/sfno_73ch_2step/ngpu64_mp1_sp1/training_checkpoints/ckpt_mp0.tar'
    max_epochs: 12
    scheduler_T_max: 12 
    lr: 5E-5
    finetune: !!bool True
    n_eval_samples: 256

sfno_73ch_infer:
    <<: *SFNO_73CH
    pretrained_checkpoint_path: '/runs/sfno_73ch/ngpu64_mp1_sp1/training_checkpoints/ckpt_mp0.tar'
    max_epochs: 1
    scheduler_T_max: 1
    lr: 1E-8
    finetune: !!bool True

sfno_73ch_2step_infer:
    <<: *SFNO_73CH
    pretrained_checkpoint_path: '/runs/sfno_73ch_2step/ngpu64_mp1_sp1/training_checkpoints/ckpt_mp0.tar'
    max_epochs: 1
    scheduler_T_max: 1
    lr: 1E-8
    finetune: !!bool True

sfno_73ch_3step_infer:
    <<: *SFNO_73CH
    pretrained_checkpoint_path: '/runs/sfno_73ch_3step/ngpu64_mp1_sp1/training_checkpoints/ckpt_mp0.tar'
    max_epochs: 1
    scheduler_T_max: 1
    lr: 1E-8
    finetune: !!bool True

sfno_73ch_test_config:
    <<: *SFNO_73CH
    max_epochs: 2
    scheduler_T_max: 2
    n_train_samples: 16
    n_eval_samples: 16

